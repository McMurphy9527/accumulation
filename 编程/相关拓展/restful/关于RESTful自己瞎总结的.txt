RESTful一种软件架构 只是提供了一组设计原则和约束条件。在客户端和服务端之间通过呈现状态的转移来驱动应用状态的演进。要让应用RESTful化，需要遵循以下约束。

restful有几种重要的属性：URI， 可寻址， 无状态， 表示， 连通性， 统一接口
	URI 是说我们把每一个资源都看成一个实体，必须要有一个固定名称。
	可寻址：感觉每一个资源都有一个URI，这样就是可寻址的。
	无状态： 在服务端不保持应用状态，只是根据客户端的请求来进行操作，客户端请求时会带有状态，服务端会根据此来设定应用状态，但不会一直保持。
	基于状态的Web服务:	在基于状态的Web服务中，Client与Server交互的信息(如：用户登录状态)会保存在Server的Session中。再这样的前提下，Client中的用户请求只能被保存有此用户相关状态信息的服务器所接受和理解，这也就意味着在基于状态的Web系统中的Server无法对用户请求进行负载均衡等自由的调度(一个Client请求只能由一个指定的Server处理)。同时这也会导致另外一个容错性的问题，如果指定的Server在Client的用户发出请求的过程中宕机，那么此用户最近的所有交互操作将无法被转移至别的Server上，即此请求将无效化。
	基于无状态的Web服务:	在无状态的Web服务中，每一个Web请求都必须是独立的，请求之间是完全分离的。Server没有保存Client的状态信息，所以Client发送的请求必须包含有能够让服务器理解请求的全部信息，包括自己的状态信息。使得一个Client的Web请求能够被任何可用的Server应答，从而将Web系统扩展到大量的Client中。


表示： 这个个人理解是 需要一个展示， 就是客户端在访问时，服务端提供请求的资源与状态，这样在客户端的一种表现形式。

连通性（节省的是检索查找的时间）： 就是最好把所有资源都能够连接起来，这样话，在寻找的时候会很快。例如谷歌，当你搜索时，会给出很多结果，但是每一页只有20个结果，当你点击第二页的时候，就会展示后面的结果，其实这些数据并不在谷歌数据库中，要不然谷歌数据库就太庞大了，其实就是利用了连通性，每一页都指向下一页，这样就把所有资源链接到一起，而且方便快捷，节约了查找数据库的时间。

统一接口：就是利用标准的GET PUT POST DELET进行对资源操作。
